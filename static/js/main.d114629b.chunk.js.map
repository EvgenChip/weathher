{"version":3,"sources":["components/CitySelect/styles.tsx","config.ts","components/CitySelect/index.tsx","components/WeatherCard/styles.tsx","components/WeatherCard/index.tsx","components/WeatherBlock/styles.tsx","components/WeatherBlock/WeatherBlockOnSevenDays/styles.tsx","images/placeholder-icon.svg","utils.ts","api/index.ts","components/WeatherBlock/hooks.ts","redux/weather/actions.ts","components/WeatherBlock/WeatherBlockOnSevenDays/index.tsx","components/WeatherBlock/WeatherBlockOnSevenDays/hooks.ts","components/Input/styles.tsx","components/Input/index.tsx","components/WeatherBlock/WeatherBlockOfThePast/styles.tsx","redux/weather/selectors.ts","components/WeatherBlock/WeatherBlockOfThePast/hooks.ts","components/WeatherBlock/WeatherBlockOfThePast/index.tsx","pages/styles.tsx","pages/MainPage/index.tsx","images/background-bottom.png","images/background-top.png","styles.tsx","App.tsx","redux/weather/reducer.ts","redux/store.tsx","index.tsx"],"names":["Select","styled","select","isCitySelected","Option","option","CITIES","name","value","APP_ID","renderCity","CitySelect","city","selectCity","onChange","placeholder","selected","disabled","map","WeatherCardInner","div","width","Date","Icon","img","heightIcon","Degrees","WeatherCard","date","weather","sign","temp","src","icon","WeatherBlock","WeatherTitle","h1","EmptyWeatherBlock","EmptyWeatherIcon","EmptyWeatherPlaceholder","p","WeatherContentWrapper","ArrowControlLeft","button","ArrowControlRight","formatDate","toISOString","slice","formatDateDailyWeather","toLocaleDateString","day","month","year","toLowerCase","mapDailyWeather","dt","Math","round","getWeather","axios","get","data","daily","getWeatherOfDay","formattedDay","getTime","current","useWeatherFields","useState","setCity","setDate","event","target","selectDate","saveWeathers","createAction","saveWeather","renderWeather","WeatherBlockOnSevenDays","weathers","useEffect","then","useWeatherList","isCommon","useMediaQuery","isMobile","PAGE_SIZE_BY_DEVICE","position","updatePosition","pageSize","updatePageSize","list","next","prev","usePagination","onClick","length","placeholderIcon","Input","input","DateInput","React","type","changeType","today","minDate","getDate","maxDate","onFocus","onBlur","onKeyDown","min","max","required","WeatherSelectBlock","withWeatherList","createSelector","state","useWeatherOfDayApi","cached","dispatch","useDispatch","d","WeatherBlockOfThePast","weatherList","useSelector","useWeatherByDate","formatDateDisplay","PageContainer","PageTitle","header","PageTitleWord","props","lineHeight","textAlign","PageFooter","footer","WeathersBlocks","MainPage","AppBody","backgroundBottom","backgroundTop","Container","App","weatherReducer","handleActions","payload","samara","reducers","combineReducers","enhancer","applyMiddleware","thunkMiddleware","persistConfig","key","storage","store","createStore","persistReducer","persistor","persistStore","Global","createGlobalStyle","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d114629b.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Select = styled.select < { isCitySelected: boolean } > `\r\n  display: block;\r\n  color: ${({ isCitySelected }) => isCitySelected ? '#2C2D76' : '#8083A4'};\r\n  font-size: 16px;\r\n  height: 48px;\r\n  padding: 13px 34px 13px 10px;\r\n  margin-left: 4px;\r\n  width: 251px;\r\n  max-width: 100%;\r\n  border: 2px solid rgba(128, 131, 164, 0.2);\r\n  border-radius: 8px;\r\n  outline: none;\r\n  background: rgba(128, 131, 164, 0.06);\r\n  transition: background-color 0.7s ease;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    border: 2px solid #8083A4;\r\n  }\r\n\r\n  &:active {\r\n    border: 2px solid #373AF5;\r\n  }\r\n\r\n  @media ${'(max-width: 730px)'} {\r\n    margin-left: 0px;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const Option = styled.option`\r\n  color:#2C2D76;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n`\r\n","export type City = {\r\n    name: string\r\n    value: string\r\n}\r\n\r\nexport const CITIES: City[] = [\r\n    { name: 'Samara', value: 'lat=53.19&lon=50.10' },\r\n    { value: 'lat=53.50&lon=49.42', name: 'Toliatty' },\r\n    { value: 'lat=51.53&lon=46.03', name: 'Saratov' },\r\n    { value: 'lat=55.79&lon=49.10', name: 'Kazan' },\r\n    { value: 'lat=45.03&lon=38.97', name: 'Krasnodar' },\r\n]\r\n\r\nexport const APP_ID = '04160438ae6d577745ad287cda3d9bca'","import React from 'react'\r\nimport { Select, Option } from './styles'\r\n\r\nimport { CITIES, City } from '../../config'\r\n\r\nconst renderCity = ({ value, name }: City) => <Option key={value} value={value}>{name}</Option>\r\n\r\nexport const CitySelect: React.FC<ICitySelect> = ({ city, selectCity }) => (\r\n  <Select value={city} onChange={selectCity} placeholder=\"Select city\" isCitySelected={!!city}>\r\n    <Option selected={!city} disabled>Select city</Option>\r\n    {CITIES.map(renderCity)}\r\n  </Select>\r\n)\r\n","import styled from 'styled-components'\r\n\r\nexport const WeatherCardInner = styled.div < { width: string } > `\r\n  background-color: #373AF5;\r\n  border-radius: 6px;\r\n  width: ${({ width }) => width};\r\n  height: 237px;\r\n  padding: 20px 21px 24px 19px;\r\n  margin: 55px 5px 0px 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  @media ${'(max-width: 730px)'} {\r\n    margin-top: 30px;\r\n  }\r\n  \r\n  @media ${'(max-width: 359px)'} {\r\n    border: 2px solid #2C2D76;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nexport const Date = styled.div`\r\n  font-weight: 700;\r\n  text-transform: lowercase;\r\n`\r\n\r\nexport const Icon = styled.img < { heightIcon: string } > `\r\n  height: ${({ heightIcon }) => heightIcon};\r\n  align-self: center;\r\n`\r\n\r\nexport const Degrees = styled.div`\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  align-self: flex-end;\r\n`\r\n","import { FC } from 'react'\r\nimport { WeatherCardInner, Date, Degrees, Icon } from './styles'\r\n\r\nexport const WeatherCard: FC<IWeatherCard> = ({ date, weather, width, heightIcon }) => {\r\n  const sign: string = (weather.temp > 0) ? '+' : ''\r\n\r\n  return (\r\n    <WeatherCardInner width={width}>\r\n      <Date>{date}</Date>\r\n      <Icon heightIcon={heightIcon} src={`http://openweathermap.org/img/wn/${weather.icon}@4x.png`} />\r\n      <Degrees>{sign}{weather.temp}°</Degrees>\r\n    </WeatherCardInner>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const WeatherBlock = styled.div`\r\n  width: 660px;\r\n  height: 524px;\r\n  padding: 54px 54px;\r\n  background: #fff;\r\n  box-shadow: 0px 4px 4px rgba(4, 5, 73, 0.25), 14px 14px 20px rgba(5, 6, 114, 0.2);\r\n  border-radius: 8px;\r\n\r\n  @media ${'(max-width: 1470px)'} {\r\n    margin-bottom: 34px;\r\n  }\r\n  \r\n  @media ${'(max-width: 730px)'} {\r\n    width: 100%;\r\n    padding: 32px 54px 60px 54px;\r\n    height: auto;\r\n  }\r\n\r\n  @media ${'(max-width: 359px)'} {\r\n    padding: 32px 24px 60px 24px;\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport const WeatherTitle = styled.h1`\r\n  margin-bottom: 36px;\r\n  margin-left: 4px;\r\n  color: #2C2D76;\r\n  font-weight: bold;\r\n  font-size: 32px;\r\n\r\n  @media ${'(max-width: 730px)'} {\r\n    margin-left: 0px;\r\n    line-height: 32px;\r\n  }\r\n  \r\n  @media ${'(max-width: 390px)'} {\r\n    margin-left: 0px;\r\n    line-height: 32px;\r\n    font-size: 25px;\r\n  }\r\n`\r\n\r\nexport const EmptyWeatherBlock = styled.div`\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-top: 60px;\r\n`\r\n\r\nexport const EmptyWeatherIcon = styled.img`\r\n  margin-bottom: 22px;\r\n`\r\n\r\nexport const EmptyWeatherPlaceholder = styled.p`\r\n  color:#8083A4;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const WeatherContentWrapper = styled.div`\r\n  display: flex;\r\n\r\n  @media ${'(max-width: 705px)'} {\r\n    overflow-y: hidden;\r\n  }\r\n`\r\n\r\nexport const ArrowControlLeft = styled.button`\r\n  position: relative;\r\n  top: 21px;\r\n  left: -33px;\r\n  border: none;\r\n  outline: none;\r\n  opacity: 0.6;\r\n\r\n  @media ${'(max-width: 705px)'} {\r\n    display: none;\r\n  }\r\n\r\n  &:hover {\r\n      cursor: pointer;\r\n      opacity: 1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    display: block;\r\n    border-right: solid 2px #8083A4;\r\n    border-top: solid 2px #8083A4;\r\n    width: 10px;\r\n    height: 10px;\r\n    transform: translate(12px, 0px) rotate(-135deg);\r\n  }\r\n`\r\n\r\nexport const ArrowControlRight = styled.button`\r\n  position: relative;\r\n  top: 21px;\r\n  right: 1px;\r\n  border: none;\r\n  outline: none;\r\n  opacity: 0.6;\r\n\r\n  @media ${'(max-width: 705px)'} {\r\n    display: none;\r\n  }\r\n\r\n  &:hover {\r\n      cursor: pointer;\r\n      opacity: 1;\r\n  }\r\n  \r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    display: block;\r\n    border-right: solid 2px #8083A4;\r\n    border-top: solid 2px #8083A4;\r\n    width: 10px;\r\n    height: 10px;\r\n    transform: translate(8px, 0px) rotate(45deg);\r\n  }\r\n`\r\n","export default __webpack_public_path__ + \"static/media/placeholder-icon.c93ab75c.svg\";","export const formatDate = (date: Date): string => date.toISOString().slice(0, 10) // \"2021-05-22\"\r\n\r\nexport const formatDateDisplay = (date: string | undefined): string | undefined => {\r\n  if (date) {\r\n    return new Date(date).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' }).toLowerCase() + '' // 22 may 2021\r\n  }\r\n}\r\n\r\nexport const formatDateDailyWeather = (date: number): string => new Date(date * 1000).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' }).toLowerCase() + '' // 22 may 2021\r\n","import axios from 'axios'\r\nimport { APP_ID } from '../config'\r\nimport { formatDateDailyWeather } from '../utils'\r\n\r\nexport type Weather = {\r\n  date: string\r\n  temp: number\r\n  icon: string\r\n}\r\n\r\nexport type WeatherData = {\r\n  city: string\r\n  date: string\r\n  weather: Weather\r\n}\r\n\r\nconst mapDailyWeather = (day: DailyWeather): Weather => ({\r\n  date: formatDateDailyWeather(day.dt),\r\n  temp: Math.round(day.temp.day),\r\n  icon: day.weather[0].icon\r\n})\r\n\r\nexport const getWeather = async (city: string): Promise<Weather[]> => {\r\n  const { data } = await axios.get<{}, WeatherListResponse>(`https://api.openweathermap.org/data/2.5/onecall?${city}&exclude=current,minutely,hourly,alerts&units=metric&appid=${APP_ID}`)\r\n\r\n  return data.daily.map(mapDailyWeather)\r\n}\r\n\r\nconst mapWeather = (day: CurrentWeather): Weather => ({\r\n  date: formatDateDailyWeather(day.dt),\r\n  temp: Math.round(day.temp),\r\n  icon: day.weather[0].icon\r\n})\r\n\r\nexport const getWeatherOfDay = async (city: string, date: string): Promise<WeatherData> => {\r\n  const formattedDay: number = new Date(date).getTime() / 1000\r\n  const { data } = await axios.get<{}, CurrentWeatherResponse>(`https://api.openweathermap.org/data/2.5/onecall/timemachine?${city}&dt=${formattedDay}&units=metric&appid=${APP_ID}`)\r\n\r\n  return {\r\n    city,\r\n    date,\r\n    weather: mapWeather(data.current),\r\n  }\r\n}","import { useState } from 'react'\r\n\r\nexport const useWeatherFields = () => {\r\n  const [city, setCity] = useState<string>()\r\n  const selectCity = (event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    setCity(event.target.value)\r\n  }\r\n\r\n  const [date, setDate] = useState<string>()\r\n  const selectDate = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setDate(event.target.value)\r\n  }\r\n\r\n  return {\r\n    city,\r\n    selectCity,\r\n    date,\r\n    selectDate\r\n  }\r\n}\r\n\r\n\r\n","import { createAction } from 'redux-actions'\r\n\r\nexport const saveWeathers = createAction('weathers/save')\r\nexport const saveWeather = createAction('weather/save')\r\n","import { FC } from 'react'\r\nimport { CitySelect } from '../../CitySelect'\r\nimport { WeatherCard } from '../../WeatherCard'\r\nimport { WeatherBlock, WeatherTitle, EmptyWeatherBlock, EmptyWeatherIcon, EmptyWeatherPlaceholder } from '../styles'\r\nimport { WeatherContentWrapper, ArrowControlLeft, ArrowControlRight } from './styles'\r\nimport placeholderIcon from '../../../images/placeholder-icon.svg'\r\n\r\nimport { useWeatherList, usePagination } from './hooks'\r\n\r\nconst renderWeather = (day: IWeatherToDisplay) => <WeatherCard key={day.date} date={day.date} weather={day} heightIcon=\"115px\" width=\"174px\" />\r\n\r\nexport const WeatherBlockOnSevenDays: FC = () => {\r\n  const { city, selectCity, weathers } = useWeatherList()\r\n  const { position, next, prev, list, pageSize } = usePagination(weathers)\r\n\r\n  return (\r\n    <WeatherBlock>\r\n      <WeatherTitle>7 Days Forecast</WeatherTitle>\r\n      <CitySelect city={city} selectCity={selectCity} />\r\n      {weathers && list\r\n        ? (\r\n          <WeatherContentWrapper>\r\n            <ArrowControlLeft disabled={position === 0} onClick={prev} />\r\n            {list.map(renderWeather)}\r\n            <ArrowControlRight disabled={position === weathers.length - pageSize} onClick={next} />\r\n          </WeatherContentWrapper>\r\n          )\r\n        : (\r\n          <EmptyWeatherBlock>\r\n            <EmptyWeatherIcon src={placeholderIcon}></EmptyWeatherIcon>\r\n            <EmptyWeatherPlaceholder>Fill in all the fields and the weather will be displayed</EmptyWeatherPlaceholder>\r\n          </EmptyWeatherBlock>\r\n          )\r\n      }\r\n    </WeatherBlock>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { useMediaQuery } from 'beautiful-react-hooks'\r\nimport { Weather, getWeather } from '../../../api'\r\nimport {useWeatherFields} from '../hooks'\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveWeathers } from '../../../redux/weather/actions'\r\n\r\nexport const useWeatherList = () => {\r\n  const [weathers, saveWeathers] = useState<Weather[]>()\r\n  const { city, selectCity } = useWeatherFields()\r\n\r\n  useEffect(() => {\r\n    if (city) {\r\n      getWeather(city).then(saveWeathers)\r\n    }\r\n  }, [city])\r\n\r\n  return { weathers, city, selectCity }\r\n}\r\n\r\nexport const usePagination = (weathers?: Weather[]) => {\r\n  const isCommon: boolean = useMediaQuery('(min-width: 706px)')\r\n  const isMobile: boolean = useMediaQuery('(max-width: 705px)')\r\n\r\n  const PAGE_SIZE_BY_DEVICE = {\r\n    COMMON: 3,\r\n    MOBILE: 7\r\n  }\r\n\r\n  const [position, updatePosition] = useState(0)\r\n  const [pageSize, updatePageSize] = useState(PAGE_SIZE_BY_DEVICE.COMMON)\r\n\r\n  const next = () => {\r\n    updatePosition(position + 1)\r\n  }\r\n\r\n  const prev = () => {\r\n    updatePosition(position - 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      updatePageSize(PAGE_SIZE_BY_DEVICE.MOBILE)\r\n    }\r\n\r\n    if (isCommon) {\r\n      updatePageSize(PAGE_SIZE_BY_DEVICE.COMMON)\r\n    }\r\n  }, [isCommon, isMobile])\r\n\r\n  const list = weathers ? weathers.slice(position, position + pageSize) : []\r\n\r\n  return {\r\n    position,\r\n    next,\r\n    prev,\r\n    list,\r\n    pageSize\r\n  }\r\n}\r\n\r\nexport const useWeatherListApi = (city?: string) => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (city) {\r\n      getWeather(city).then(d => dispatch(saveWeathers(d)))\r\n    }\r\n  }, [city])\r\n}","import styled from 'styled-components'\r\n\r\nexport const Input = styled.input`\r\n  width: 251px;\r\n  max-width: 100%;\r\n  height: 48px;\r\n  margin-right: 5px;\r\n  border: 2px solid rgba(128, 131, 164, 0.2);\r\n  border-radius: 8px;\r\n  outline: none;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  color:#8083A4;\r\n  padding: 14px 9px 13px 15px;\r\n  background: rgba(128, 131, 164, 0.06);\r\n\r\n  &:hover {\r\n    border: 2px solid #8083A4;\r\n  }\r\n\r\n  &:active {\r\n    border: 2px solid #373AF5;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color:#8083A4;\r\n    font-weight: 400;\r\n  }\r\n  \r\n  @media ${'(max-width: 730px)'} {\r\n    width: 100%;\r\n    margin-top: 24px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Input } from './styles'\r\nimport { formatDate } from '../../utils'\r\n\r\nexport const DateInput: React.FC<IDateInput> = ({ date, selectDate }) => {\r\n  const [type, changeType] = React.useState('text')\r\n\r\n  const setFieldToDate = () => {\r\n    if (type !== 'date') {\r\n      changeType('date')\r\n    }\r\n  }\r\n\r\n  const setFieldToText = () => {\r\n    if (!date && type !== 'text') {\r\n      changeType('text')\r\n    }\r\n  }\r\n\r\n  const today = new Date()\r\n\r\n  const minDate: string = formatDate(new Date(new Date().setDate(today.getDate() - 5)))\r\n  const maxDate: string = formatDate(today)\r\n\r\n  return (\r\n    <Input\r\n      onChange={selectDate}\r\n      onFocus={setFieldToDate}\r\n      onBlur={setFieldToText}\r\n      onKeyDown={() => {}}\r\n      type={type}\r\n      min={minDate}\r\n      max={maxDate}\r\n      value={date}\r\n      placeholder=\"Select date\"\r\n      required\r\n    />\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const WeatherSelectBlock = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media ${'(max-width: 730px)'} {\r\n    flex-direction: column;\r\n  }\r\n`\r\n","import { createSelector } from 'reselect'\r\nimport { WeatherState } from './types'\r\n\r\nconst weatherSelector = (state: any): WeatherState => state.weather\r\n\r\nexport const withWeatherList = createSelector(weatherSelector, ({ list }) => list)\r\n","import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { withWeatherList } from '../../../redux/weather/selectors'\r\nimport {useWeatherFields} from '../hooks'\r\nimport { saveWeather } from '../../../redux/weather/actions'\r\nimport { getWeatherOfDay } from '../../../api'\r\n\r\nexport const useWeatherByDate = () => {\r\n  const { city, selectCity, date, selectDate } = useWeatherFields()\r\n  const weatherList = useSelector(withWeatherList)\r\n  // @ts-ignore\r\n  const weather = city && date && weatherList?.[city]?.[date]\r\n\r\n  useWeatherOfDayApi(city, date, !!weather)\r\n\r\n  return { weather, city, selectCity, date, selectDate }\r\n}\r\n\r\nexport const useWeatherOfDayApi = (city?: string, date?: string, cached?: boolean) => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (city && date && !cached) {\r\n      getWeatherOfDay(city, date).then(d => dispatch(saveWeather(d)))\r\n    }\r\n  }, [city, date])\r\n}","import { FC } from 'react'\r\n\r\nimport { DateInput } from '../../Input'\r\nimport { CitySelect } from '../../CitySelect'\r\nimport { WeatherCard } from '../../WeatherCard'\r\nimport { WeatherBlock, WeatherTitle, EmptyWeatherBlock, EmptyWeatherIcon, EmptyWeatherPlaceholder } from '../styles'\r\nimport { WeatherSelectBlock } from './styles'\r\nimport placeholderIcon from '../../../images/placeholder-icon.svg'\r\nimport { formatDateDisplay } from '../../../utils'\r\n\r\nimport { useWeatherByDate } from './hooks'\r\n\r\nexport const WeatherBlockOfThePast: FC = () => {\r\n  const { city, selectCity, date, selectDate, weather } = useWeatherByDate()\r\n  const formatDate: string | undefined = formatDateDisplay(date)\r\n\r\n  return (\r\n    <WeatherBlock>\r\n      <WeatherTitle>Forecast for a Date in the Past</WeatherTitle>\r\n      <WeatherSelectBlock>\r\n        <CitySelect city={city} selectCity={selectCity} />\r\n        <DateInput date={date} selectDate={selectDate} />\r\n      </WeatherSelectBlock>\r\n      {weather\r\n        ? (\r\n          <WeatherCard\r\n            date={formatDate}\r\n            weather={weather}\r\n            heightIcon=\"146px\"\r\n            width=\"98.5%\"\r\n          />\r\n          )\r\n        : (\r\n          <EmptyWeatherBlock>\r\n            <EmptyWeatherIcon src={placeholderIcon} />\r\n            <EmptyWeatherPlaceholder>Fill in all the fields and the weather will be displayed</EmptyWeatherPlaceholder>\r\n          </EmptyWeatherBlock>\r\n          )\r\n      }\r\n    </WeatherBlock>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const PageContainer = styled.div``\r\n\r\nexport const PageTitle = styled.header`\r\n  width: 775px;\r\n  margin: 0 auto 72px auto;\r\n\r\n  @media ${'(max-width: 880px)'} {\r\n    width: 100%;\r\n  }\r\n\r\n  @media ${'(max-width: 730px)'} {\r\n    width: 245px;\r\n    margin-bottom: 24px;\r\n  }\r\n`\r\n\r\nexport const PageTitleWord = styled.h1 < { lineHeight: string, textAlign: string } > `\r\n  font-weight: bold;\r\n  font-size: 102px;\r\n  line-height: ${props => props.lineHeight};\r\n  text-align: ${props => props.textAlign};\r\n\r\n  @media ${'(max-width: 730px)'} {\r\n    font-size: 32px;\r\n    line-height: 32px;\r\n  }\r\n`\r\n\r\nexport const PageFooter = styled.footer`\r\n  color: #fff;\r\n  margin-top: 199px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  opacity: 0.6;\r\n  \r\n  @media ${'(max-width: 1470px)'} {\r\n    margin-top: 12px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { WeatherBlockOnSevenDays } from '../../components/WeatherBlock/WeatherBlockOnSevenDays'\r\nimport { WeatherBlockOfThePast } from '../../components/WeatherBlock/WeatherBlockOfThePast'\r\nimport { PageContainer, PageTitle, PageTitleWord, PageFooter } from '../styles'\r\n\r\nconst WeathersBlocks = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media ${'(max-width: 1470px)'} {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nexport const MainPage = () => (\r\n  <PageContainer>\r\n    <PageTitle>\r\n      <PageTitleWord lineHeight=\"83px\" textAlign=\"left\">Weather</PageTitleWord>\r\n      <PageTitleWord lineHeight=\"97px\" textAlign=\"right\">forecast</PageTitleWord>\r\n    </PageTitle>\r\n    <WeathersBlocks>\r\n      <WeatherBlockOnSevenDays />\r\n      <WeatherBlockOfThePast />\r\n    </WeathersBlocks>\r\n    <PageFooter>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</PageFooter>\r\n  </PageContainer>\r\n)\r\n","export default __webpack_public_path__ + \"static/media/background-bottom.6be33a07.png\";","export default __webpack_public_path__ + \"static/media/background-top.1b9e0722.png\";","import styled from 'styled-components'\r\nimport backgroundBottom from './images/background-bottom.png'\r\nimport backgroundTop from './images/background-top.png'\r\n\r\nexport const AppBody = styled.div`\r\n  background-color: #373AF5;\r\n  background-image: url(${backgroundBottom}), url(${backgroundTop});\r\n  background-position: 0% 100%,100% 0%;\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 84px 43px 16px 43px;\r\n  max-width: 1440px;\r\n  @media ${'(max-width: 730px)'} {\r\n    padding-top: 32px;\r\n  }\r\n`\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n","import React, { FC } from 'react'\r\nimport { MainPage } from './pages/MainPage'\r\nimport { Container, AppBody } from './styles'\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <AppBody>\r\n      <Container>\r\n        <MainPage />\r\n      </Container>\r\n    </AppBody>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { handleActions } from 'redux-actions'\r\nimport { Weather, WeatherState } from './types'\r\nimport { saveWeathers, saveWeather } from './actions'\r\nimport { WeatherData } from '../../api'\r\n\r\nconst initialState: WeatherState = {\r\n  list: {}\r\n}\r\n\r\nexport const weatherReducer = handleActions<WeatherState, any>(\r\n  {\r\n    [`${saveWeathers}`]: (state, { payload }: { payload: Weather[] }) => {\r\n      return {\r\n        ...state,\r\n        list: {\r\n          samara: {\r\n            d: payload[0]\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [`${saveWeather}`]: (state, { payload }: { payload: WeatherData }) => {\r\n      const { city, date, weather } = payload\r\n\r\n      return {\r\n        ...state,\r\n        list: {\r\n          ...state.list,\r\n          [city]: {\r\n            ...state.list?.[city],\r\n            [date]: weather\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  initialState\r\n)\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { persistStore, persistReducer } from \"redux-persist\"\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { weatherReducer } from './weather/reducer'\r\n\r\nconst reducers = combineReducers({\r\n  weather: weatherReducer\r\n})\r\n\r\ntype ReducersType = typeof reducers\r\nexport type AppStateType = ReturnType<ReducersType>\r\n\r\nlet enhancer = applyMiddleware(thunkMiddleware)\r\n\r\nconst isDebug = process.env.NODE_ENV === 'development'\r\n// @ts-ignore\r\nif (isDebug && window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n  // @ts-ignore\r\n  enhancer = compose(enhancer, window.__REDUX_DEVTOOLS_EXTENSION__())\r\n}\r\n\r\nconst persistConfig = {\r\n\tkey: 'root',\r\n\tstorage,\r\n }\r\n\r\nexport const store = createStore(persistReducer<any, any>(persistConfig, reducers), enhancer)\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { store, persistor } from \"./redux/store\"\r\nimport { PersistGate } from \"redux-persist/integration/react\"\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nconst Global = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    font-family: Ubuntu;\r\n  }\r\n`\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n    <Global />\r\n    <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}